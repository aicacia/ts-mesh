{"version":3,"file":"index.js","sources":["../node_modules/eventemitter3/index.js","../src/Mesh.ts","../src/Peer.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Buffer } from \"buffer\";\nimport type { IPeerData } from \"./Peer\";\nimport type { Peer } from \"./Peer\";\nimport type { PeerConnection } from \".\";\n\nexport const DEFAULT_SYNC_MS = 60_000;\nexport const DEFAULT_MESSAGE_LAST_SEEN_DELETE_MS = 5 * 60_000;\nexport const DEFAULT_REPLACE_OLD_PEER_MS = 5 * 60_000;\n\nexport interface IMeshEvents {\n  data(data: any, from: string): void;\n}\n\nexport interface IMeshOptions {\n  maxConnections?: number;\n  syncMS?: number;\n  messageLastSeenDeleteMS?: number;\n  replaceOldPeerMS?: number;\n}\n\nexport class Mesh extends EventEmitter<IMeshEvents> {\n  protected peer: Peer;\n  protected maxConnections = 6;\n  protected syncMS = DEFAULT_SYNC_MS;\n  protected messageLastSeenDeleteMS = DEFAULT_MESSAGE_LAST_SEEN_DELETE_MS;\n  protected replaceOldPeerMS = DEFAULT_REPLACE_OLD_PEER_MS;\n  protected messageId = 0;\n  protected messages: Map<string, number> = new Map();\n  protected connections: Map<string, number> = new Map();\n  protected payloadsToSend: Array<any> = [];\n  protected syncTimeoutId: unknown | undefined;\n\n  constructor(peer: Peer, options: IMeshOptions = {}) {\n    super();\n    this.peer = peer;\n    this.peer.on(\"data\", this.onData);\n    this.peer.on(\"join\", this.onDiscover);\n    this.peer.on(\"announce\", this.onDiscover);\n    this.peer.on(\"connection\", this.onConnection);\n    this.peer.on(\"disconnection\", this.onDisconnection);\n    this.peer.on(\"connect\", this.sync);\n    this.peer.on(\"disconnect\", this.onDisconnect);\n    if (\n      typeof options.maxConnections === \"number\" &&\n      options.maxConnections > 0\n    ) {\n      this.maxConnections = options.maxConnections;\n    }\n    if (typeof options.syncMS === \"number\" && options.syncMS > 5000) {\n      this.syncMS = options.syncMS;\n    }\n    if (\n      typeof options.messageLastSeenDeleteMS === \"number\" &&\n      options.messageLastSeenDeleteMS > 0\n    ) {\n      this.messageLastSeenDeleteMS = options.messageLastSeenDeleteMS;\n    }\n    if (\n      typeof options.replaceOldPeerMS === \"number\" &&\n      options.replaceOldPeerMS > 0\n    ) {\n      this.replaceOldPeerMS = options.replaceOldPeerMS;\n    }\n    if (this.peer.isConnected()) {\n      this.sync();\n    }\n  }\n\n  getPeer() {\n    return this.peer;\n  }\n\n  broadcast(payload: any) {\n    if (this.connections.size === 0) {\n      this.payloadsToSend.push(payload);\n    } else {\n      return this.broadcastInternal(payload);\n    }\n  }\n\n  private broadcastInternal(payload: any) {\n    const from = this.peer.getId(),\n      id = this.messageId++,\n      messageId = `${from}-${id}`;\n\n    this.messages.set(messageId, Date.now());\n    this.peer.broadcast(\n      JSON.stringify({\n        id,\n        from,\n        payload,\n      })\n    );\n    return this;\n  }\n\n  private needsConnection() {\n    return this.connections.size < this.maxConnections;\n  }\n\n  private onData = (data: IPeerData, _from: string) => {\n    if (typeof data === \"string\" || Buffer.isBuffer(data)) {\n      const json = JSON.parse(data.toString()),\n        messageId = `${json.from}-${json.id}`;\n\n      if (!this.messages.has(messageId)) {\n        this.messages.set(messageId, Date.now());\n        this.peer.broadcast(data);\n        this.emit(\"data\", json.payload, json.from);\n      }\n    }\n  };\n  private onDiscover = (id: string) => {\n    if (!this.peer.getConnections().has(id)) {\n      let shouldConnect = false;\n\n      if (this.needsConnection()) {\n        shouldConnect = true;\n      } else {\n        const peer = getOldestPeerId(this.connections.entries());\n\n        if (peer) {\n          const [oldestPeerId, connectedAt] = peer;\n\n          if (connectedAt < Date.now() - this.replaceOldPeerMS) {\n            this.peer.disconnectFrom(oldestPeerId);\n            shouldConnect = true;\n          }\n        }\n      }\n\n      if (shouldConnect) {\n        this.peer.connectToInBackground(id);\n      }\n    }\n  };\n\n  private onConnection = (_connection: PeerConnection, id: string) => {\n    if (this.payloadsToSend.length) {\n      this.payloadsToSend.forEach((payload) => this.broadcastInternal(payload));\n      this.payloadsToSend.length = 0;\n    }\n    this.connections.set(id, Date.now());\n  };\n\n  private onDisconnection = (_connection: PeerConnection, id: string) => {\n    if (this.needsConnection()) {\n      this.peer.announce();\n    }\n    this.connections.delete(id);\n  };\n\n  private onDisconnect = () => {\n    this.connections.clear();\n    if (this.syncTimeoutId) {\n      clearTimeout(this.syncTimeoutId as number);\n      this.syncTimeoutId = undefined;\n    }\n  };\n\n  private onSync = () => {\n    if (this.needsConnection()) {\n      this.peer.announce();\n    }\n    this.cleanOldMessages();\n    this.syncTimeoutId = undefined;\n    this.sync();\n  };\n\n  private sync = () => {\n    this.syncTimeoutId = setTimeout(\n      this.onSync,\n      this.syncMS * 0.5 + Math.random() * this.syncMS * 0.5\n    );\n  };\n\n  private cleanOldMessages() {\n    if (this.messages.size) {\n      const now = Date.now();\n\n      for (const [messageId, received] of this.messages.entries()) {\n        if (now - received > this.messageLastSeenDeleteMS) {\n          this.messages.delete(messageId);\n        }\n      }\n    }\n  }\n}\n\nfunction getOldestPeerId(\n  peers: IterableIterator<[id: string, connectedAt: number]>\n): [string, number] | undefined {\n  let minConnectedAt = Number.MAX_SAFE_INTEGER;\n  let oldestPeer: [string, number] | undefined;\n\n  for (const peer of peers) {\n    const connectedAt = peer[1];\n\n    if (connectedAt < minConnectedAt) {\n      minConnectedAt = connectedAt;\n      oldestPeer = peer;\n    }\n  }\n\n  return oldestPeer;\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport type { SimplePeerData, Instance } from \"simple-peer\";\nimport type SimplePeer from \"simple-peer\";\nimport { io, Socket } from \"socket.io-client\";\n\nexport type IPeerData = SimplePeerData;\nexport type PeerConnection = Instance;\n\nexport interface IPeerEvents {\n  join(this: Peer, id: string): void;\n  announce(this: Peer, id: string): void;\n  connect(this: Peer, id: string): void;\n  disconnect(this: Peer): void;\n  error(this: Peer, error: Error): void;\n  connection(this: Peer, connection: PeerConnection, id: string): void;\n  disconnection(this: Peer, connection: PeerConnection, id: string): void;\n  data(this: Peer, data: IPeerData, from: string): void;\n}\n\nexport interface IPeerOptions {\n  origin?: string;\n  namespace?: string;\n}\n\nexport class Peer extends EventEmitter<IPeerEvents> {\n  protected socket: Socket;\n  protected readonly connections: Map<string, PeerConnection> = new Map();\n  protected SimplePeer: SimplePeer.SimplePeer;\n\n  constructor(SimplePeer: SimplePeer.SimplePeer, options: IPeerOptions = {}) {\n    super();\n    this.SimplePeer = SimplePeer;\n    this.socket = io(\n      `${options.origin || \"wss://mesh.aicacia.com\"}/${options.namespace || \"\"}`\n    );\n    this.socket.on(\"signal\", this.onSignal);\n    this.socket.on(\"connect\", this.onConnect);\n    this.socket.on(\"disconnect\", this.onDisonnect);\n    this.socket.on(\"join\", this.onJoin);\n    this.socket.on(\"announce\", this.onAnnounce);\n    this.socket.on(\"leave\", this.onLeave);\n  }\n\n  getId() {\n    return this.socket.id;\n  }\n  isConnected() {\n    return this.socket.connected;\n  }\n  connected() {\n    return waitForSocket(this.socket);\n  }\n\n  getConnections(): ReadonlyMap<string, PeerConnection> {\n    return this.connections;\n  }\n\n  private onSignal = (data: RTCSessionDescription, from: string) => {\n    let connection = this.connections.get(from);\n\n    if (data.type === \"offer\" && (connection as any)?.initiator) {\n      this.disconnectFrom(from, false);\n      connection = undefined;\n    }\n    if (!connection) {\n      connection = this.createConnection(from, false);\n    }\n\n    if (!connection.destroyed) {\n      connection.signal(data);\n    }\n  };\n\n  private onConnect = () => {\n    this.emit(\"connect\", this.socket.id);\n  };\n  private onDisonnect = () => {\n    this.emit(\"disconnect\");\n    for (const [id, connection] of this.connections.entries()) {\n      this.emit(\"disconnection\", connection, id);\n      connection.destroy();\n    }\n    this.connections.clear();\n  };\n  private onJoin = (id: string) => {\n    if (id !== this.socket.id) {\n      this.emit(\"join\", id);\n    }\n  };\n  private onAnnounce = (id: string) => {\n    if (id !== this.socket.id) {\n      this.emit(\"announce\", id);\n    }\n  };\n  private onLeave = (id: string, _reason: string) => {\n    this.disconnectFrom(id);\n  };\n\n  send(to: string, data: IPeerData) {\n    const connection = this.connections.get(to);\n    if (connection?.connected) {\n      connection.send(data);\n    }\n    return this;\n  }\n  broadcast(data: IPeerData) {\n    for (const connection of this.connections.values()) {\n      if (connection.connected) {\n        connection.send(data);\n      }\n    }\n    return this;\n  }\n  announce() {\n    this.socket.emit(\"announce\");\n    return this;\n  }\n\n  get(id: string) {\n    return this.connections.get(id);\n  }\n  connectToInBackground(id: string) {\n    this.getOrCreateConnection(id, true);\n    return this;\n  }\n  connectTo(id: string) {\n    const connection = this.getOrCreateConnection(id, true);\n\n    return new Promise<PeerConnection>((resolve, reject) => {\n      if (connection.connected) {\n        resolve(connection);\n      } else {\n        const onConnect = () => {\n          removeListeners();\n          resolve(connection);\n        };\n        const onClose = () => {\n          removeListeners();\n          reject();\n        };\n        const onError = (error?: Error) => {\n          removeListeners();\n          reject(error);\n        };\n        const removeListeners = () => {\n          connection.off(\"connect\", onConnect);\n          connection.off(\"disconnect\", onClose);\n          connection.off(\"error\", onError);\n        };\n        connection.once(\"connect\", onConnect);\n        connection.once(\"disconnect\", onClose);\n        connection.once(\"error\", onError);\n      }\n    });\n  }\n  disconnectFrom(id: string, emit = true) {\n    const connection = this.connections.get(id);\n\n    if (connection) {\n      if (emit) {\n        this.emit(\"disconnection\", connection, id);\n      }\n      this.connections.delete(id);\n      connection.destroy();\n    }\n\n    return this;\n  }\n\n  private getOrCreateConnection(id: string, initiator: boolean) {\n    const connection = this.connections.get(id);\n\n    if (connection) {\n      return connection;\n    } else {\n      return this.createConnection(id, initiator);\n    }\n  }\n\n  private createConnection(id: string, initiator: boolean) {\n    const connection = new this.SimplePeer({\n      initiator,\n      trickle: false,\n    });\n\n    connection.on(\"signal\", (data: RTCSessionDescription) => {\n      this.socket.emit(\"signal\", id, data);\n    });\n    connection.on(\"data\", (data: IPeerData) => {\n      this.emit(\"data\", data, id);\n    });\n    connection.on(\"error\", (error) => {\n      this.disconnectFrom(id);\n      this.emit(\"error\", error);\n    });\n    connection.on(\"connect\", () => {\n      this.emit(\"connection\", connection, id);\n    });\n    connection.on(\"disconnect\", () => {\n      this.disconnectFrom(id);\n    });\n\n    this.connections.set(id, connection);\n\n    return connection;\n  }\n}\n\nexport function waitForSocket(socket: Socket) {\n  return new Promise<Socket>((resolve, reject) => {\n    if (socket.connected) {\n      resolve(socket);\n    } else {\n      const onConnect = () => {\n        removeListeners();\n        resolve(socket);\n      };\n      const onClose = () => {\n        removeListeners();\n        reject();\n      };\n      const onError = (error?: Error) => {\n        removeListeners();\n        reject(error);\n      };\n      const removeListeners = () => {\n        socket.off(\"connect\", onConnect);\n        socket.off(\"disconnect\", onClose);\n        socket.off(\"error\", onError);\n      };\n      socket.once(\"connect\", onConnect);\n      socket.once(\"disconnect\", onClose);\n      socket.once(\"error\", onError);\n    }\n  });\n}\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","Mesh","peer","maxConnections","syncMS","messageLastSeenDeleteMS","replaceOldPeerMS","messageId","messages","Map","connections","payloadsToSend","syncTimeoutId","constructor","options","super","onData","onDiscover","onConnection","onDisconnection","sync","onDisconnect","isConnected","getPeer","broadcast","payload","size","broadcastInternal","from","getId","id","set","Date","now","JSON","stringify","needsConnection","data","_from","Buffer","isBuffer","json","parse","toString","getConnections","shouldConnect","peers","oldestPeer","minConnectedAt","Number","MAX_SAFE_INTEGER","connectedAt","getOldestPeerId","entries","oldestPeerId","disconnectFrom","connectToInBackground","_connection","forEach","announce","delete","clear","clearTimeout","onSync","cleanOldMessages","setTimeout","Math","random","received","Peer","socket","SimplePeer","io","origin","namespace","onSignal","onConnect","onDisonnect","onJoin","onAnnounce","onLeave","connected","waitForSocket","connection","get","type","initiator","createConnection","destroyed","signal","destroy","_reason","send","to","values","getOrCreateConnection","connectTo","Promise","resolve","reject","removeListeners","onClose","onError","error","trickle"],"mappings":"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"}